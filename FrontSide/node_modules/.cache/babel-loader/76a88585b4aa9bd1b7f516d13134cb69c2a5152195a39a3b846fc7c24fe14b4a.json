{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usager\\\\Documents\\\\FaceRecognitionProject\\\\fr_front\\\\src\\\\FaceReco\\\\VideoCapture.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoCapture = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [backendResponse, setBackendResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const streamRef = useRef(null);\n  const intervalRef = useRef(null);\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoRef.current.srcObject = stream;\n      streamRef.current = stream;\n      videoRef.current.play();\n      setIsCameraActive(true);\n      startFrameCapture();\n    } catch (err) {\n      setError(\"Failed to access camera: \" + err.message);\n      setIsCameraActive(false);\n    }\n  };\n  const stopCamera = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n    }\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n    setIsCameraActive(false);\n  };\n  const captureFrame = () => {\n    if (videoRef.current && canvasRef.current) {\n      const context = canvasRef.current.getContext(\"2d\");\n      canvasRef.current.width = videoRef.current.videoWidth;\n      canvasRef.current.height = videoRef.current.videoHeight;\n      context.drawImage(videoRef.current, 0, 0);\n      return canvasRef.current.toDataURL(\"image/jpeg\");\n    }\n    return null;\n  };\n  const sendFrameToBackend = async frameData => {\n    try {\n      const response = await fetch(\"http://localhost:5000/process-frame\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          image: frameData\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setBackendResponse(data.faces);\n        drawFaceBoxes(data.faces);\n      }\n    } catch (err) {\n      console.error(\"Error sending frame:\", err);\n    }\n  };\n  const drawFaceBoxes = faces => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n\n    // Clear previous drawings\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    faces.forEach(face => {\n      const {\n        bbox,\n        name\n      } = face;\n      context.strokeStyle = \"#00ff00\";\n      context.lineWidth = 2;\n      context.strokeRect(bbox.left, bbox.top, bbox.right - bbox.left, bbox.bottom - bbox.top);\n\n      // Draw name label\n      context.fillStyle = \"#00ff00\";\n      context.font = \"16px Arial\";\n      context.fillText(name, bbox.left, bbox.top - 5);\n    });\n  };\n  const startFrameCapture = () => {\n    intervalRef.current = setInterval(() => {\n      const frame = captureFrame();\n      if (frame) {\n        sendFrameToBackend(frame);\n      }\n    }, 1000); // Capture every second\n  };\n  useEffect(() => {\n    return () => {\n      stopCamera();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-capture-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Face Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: isCameraActive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          style: {\n            width: \"640px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"640px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-placeholder\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Camera is currently inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: !isCameraActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCamera,\n        children: \"Start Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopCamera,\n        children: \"Stop Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this), backendResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detection-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Detected Faces:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: backendResponse.map((face, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: face.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCapture, \"Wt9O4Zssaq4QARTJ9wXzPXw3jlc=\");\n_c = VideoCapture;\nexport default VideoCapture;\nvar _c;\n$RefreshReg$(_c, \"VideoCapture\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoCapture","_s","videoRef","canvasRef","isCameraActive","setIsCameraActive","backendResponse","setBackendResponse","error","setError","streamRef","intervalRef","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","play","startFrameCapture","err","message","stopCamera","getTracks","forEach","track","stop","clearInterval","captureFrame","context","getContext","width","videoWidth","height","videoHeight","drawImage","toDataURL","sendFrameToBackend","frameData","response","fetch","method","headers","body","JSON","stringify","image","data","json","success","faces","drawFaceBoxes","console","canvas","clearRect","face","bbox","name","strokeStyle","lineWidth","strokeRect","left","top","right","bottom","fillStyle","font","fillText","setInterval","frame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","position","onClick","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Usager/Documents/FaceRecognitionProject/fr_front/src/FaceReco/VideoCapture.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst VideoCapture = () => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n  const [backendResponse, setBackendResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const streamRef = useRef(null);\r\n  const intervalRef = useRef(null);\r\n\r\n  const startCamera = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      videoRef.current.srcObject = stream;\r\n      streamRef.current = stream;\r\n      videoRef.current.play();\r\n      setIsCameraActive(true);\r\n      startFrameCapture();\r\n    } catch (err) {\r\n      setError(\"Failed to access camera: \" + err.message);\r\n      setIsCameraActive(false);\r\n    }\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach((track) => track.stop());\r\n    }\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n    }\r\n    setIsCameraActive(false);\r\n  };\r\n\r\n  const captureFrame = () => {\r\n    if (videoRef.current && canvasRef.current) {\r\n      const context = canvasRef.current.getContext(\"2d\");\r\n      canvasRef.current.width = videoRef.current.videoWidth;\r\n      canvasRef.current.height = videoRef.current.videoHeight;\r\n      context.drawImage(videoRef.current, 0, 0);\r\n\r\n      return canvasRef.current.toDataURL(\"image/jpeg\");\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const sendFrameToBackend = async (frameData) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/process-frame\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ image: frameData }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setBackendResponse(data.faces);\r\n        drawFaceBoxes(data.faces);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error sending frame:\", err);\r\n    }\r\n  };\r\n\r\n  const drawFaceBoxes = (faces) => {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    // Clear previous drawings\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    faces.forEach((face) => {\r\n      const { bbox, name } = face;\r\n      context.strokeStyle = \"#00ff00\";\r\n      context.lineWidth = 2;\r\n      context.strokeRect(\r\n        bbox.left,\r\n        bbox.top,\r\n        bbox.right - bbox.left,\r\n        bbox.bottom - bbox.top\r\n      );\r\n\r\n      // Draw name label\r\n      context.fillStyle = \"#00ff00\";\r\n      context.font = \"16px Arial\";\r\n      context.fillText(name, bbox.left, bbox.top - 5);\r\n    });\r\n  };\r\n\r\n  const startFrameCapture = () => {\r\n    intervalRef.current = setInterval(() => {\r\n      const frame = captureFrame();\r\n      if (frame) {\r\n        sendFrameToBackend(frame);\r\n      }\r\n    }, 1000); // Capture every second\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      stopCamera();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"video-capture-container\">\r\n      <h1>Face Recognition</h1>\r\n      <div className=\"video-container\">\r\n        {isCameraActive ? (\r\n          <>\r\n            <video ref={videoRef} style={{ width: \"640px\" }} />\r\n            <canvas\r\n              ref={canvasRef}\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: 0,\r\n                width: \"640px\",\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <div className=\"camera-placeholder\">\r\n            <p>Camera is currently inactive</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        {!isCameraActive ? (\r\n          <button onClick={startCamera}>Start Camera</button>\r\n        ) : (\r\n          <button onClick={stopCamera}>Stop Camera</button>\r\n        )}\r\n      </div>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      {backendResponse && (\r\n        <div className=\"detection-results\">\r\n          <h3>Detected Faces:</h3>\r\n          <ul>\r\n            {backendResponse.map((face, index) => (\r\n              <li key={index}>{face.name}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCapture;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}