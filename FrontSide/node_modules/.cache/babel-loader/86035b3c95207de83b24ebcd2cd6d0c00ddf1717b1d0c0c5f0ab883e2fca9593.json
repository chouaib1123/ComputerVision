{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usager\\\\Documents\\\\FaceRecognitionProject\\\\fr_front\\\\src\\\\FaceReco\\\\VideoCapture.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCapture = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [backendResponse, setBackendResponse] = useState(null);\n  useEffect(() => {\n    // Access the user's camera\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n      setIsCameraActive(true);\n    }).catch(err => {\n      console.error(\"Error accessing camera: \", err);\n      setIsCameraActive(false);\n    });\n    return () => {\n      // Clean up the camera stream on unmount\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!isCameraActive) return;\n    const interval = setInterval(() => {\n      captureFrameAndSend();\n    }, 5000); // Capture every 5 seconds\n\n    return () => clearInterval(interval);\n  }, [isCameraActive]);\n  const captureFrameAndSend = async () => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    if (!canvas || !video) return;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    const frameData = canvas.toDataURL(\"image/png\");\n    try {\n      const response = await fetch(\"http://localhost:5000/process-frame\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          frame: frameData\n        })\n      });\n      const data = await response.json();\n      setBackendResponse(data);\n      console.log(\"Backend response:\", data);\n    } catch (error) {\n      console.error(\"Error sending frame:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Capture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        width: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Unable to access the camera. Please check your settings.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), backendResponse && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last Response: \", JSON.stringify(backendResponse)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCapture, \"8YzMC8isYWUt+v7W6Z2bu4rLNK0=\");\n_c = VideoCapture;\nexport default VideoCapture;\nvar _c;\n$RefreshReg$(_c, \"VideoCapture\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","VideoCapture","_s","videoRef","canvasRef","isCameraActive","setIsCameraActive","backendResponse","setBackendResponse","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","play","catch","err","console","error","tracks","getTracks","forEach","track","stop","interval","setInterval","captureFrameAndSend","clearInterval","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","frameData","toDataURL","response","fetch","method","headers","body","JSON","stringify","frame","data","json","log","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","display","_c","$RefreshReg$"],"sources":["C:/Users/Usager/Documents/FaceRecognitionProject/fr_front/src/FaceReco/VideoCapture.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst VideoCapture = () => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n  const [backendResponse, setBackendResponse] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Access the user's camera\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true })\r\n      .then((stream) => {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n        setIsCameraActive(true);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error accessing camera: \", err);\r\n        setIsCameraActive(false);\r\n      });\r\n\r\n    return () => {\r\n      // Clean up the camera stream on unmount\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        const tracks = videoRef.current.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isCameraActive) return;\r\n\r\n    const interval = setInterval(() => {\r\n      captureFrameAndSend();\r\n    }, 5000); // Capture every 5 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [isCameraActive]);\r\n\r\n  const captureFrameAndSend = async () => {\r\n    const canvas = canvasRef.current;\r\n    const video = videoRef.current;\r\n\r\n    if (!canvas || !video) return;\r\n\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n\r\n    const context = canvas.getContext(\"2d\");\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n    const frameData = canvas.toDataURL(\"image/png\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/process-frame\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ frame: frameData }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setBackendResponse(data);\r\n      console.log(\"Backend response:\", data);\r\n    } catch (error) {\r\n      console.error(\"Error sending frame:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Video Capture</h1>\r\n\r\n      <video ref={videoRef} style={{ width: \"400px\" }} />\r\n      <p>Unable to access the camera. Please check your settings.</p>\r\n      <canvas ref={canvasRef} style={{ display: \"none\" }} />\r\n      {backendResponse && (\r\n        <p>Last Response: {JSON.stringify(backendResponse)}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCapture;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}