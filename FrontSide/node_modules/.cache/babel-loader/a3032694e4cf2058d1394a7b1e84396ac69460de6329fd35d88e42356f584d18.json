{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usager\\\\Documents\\\\FaceRecognitionProject\\\\fr_front\\\\src\\\\ListPresent\\\\PresentList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./PresentList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\", {\n  transports: [\"websocket\", \"polling\"],\n  withCredentials: true,\n  reconnection: true,\n  reconnectionDelay: 1000,\n  reconnectionAttempts: 5\n});\nconst PresentList = () => {\n  _s();\n  const [persons, setPersons] = useState([]);\n  const [isConnected, setIsConnected] = useState(socket.connected);\n  const [loading, setLoading] = useState(true);\n  const formattedDate = useMemo(() => {\n    const today = new Date();\n    const month = String(today.getMonth() + 1).padStart(2, \"0\");\n    const date = String(today.getDate()).padStart(2, \"0\");\n    const year = today.getFullYear();\n    return `${month}/${date}/${year}`;\n  }, []);\n  setPersons();\n  const fetchPersons = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/get-all-persons\");\n      const data = await response.json();\n      setPersons(data);\n    } catch (error) {\n      console.error(\"Error fetching persons:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      setIsConnected(true);\n      fetchPersons();\n    });\n    socket.on(\"disconnect\", () => {\n      setIsConnected(false);\n    });\n    socket.on(\"persons_data\", data => {\n      setPersons(data);\n    });\n    fetchPersons();\n    return () => {\n      socket.off(\"connect\");\n      socket.off(\"disconnect\");\n      socket.off(\"persons_data\");\n    };\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"List\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"List\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Present List \", formattedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-warning\",\n      children: \"Connecting to server... Please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : persons.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-message\",\n      children: \"No persons data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-cell\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-cell\",\n            children: \"Presence Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-cell\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-body\",\n        children: persons.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-cell\",\n            children: person.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-cell\",\n            children: person.presence_date ? \"Present\" : \"Absent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-cell\",\n            children: person.presence_date || \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, person.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(PresentList, \"qEP4zdN9D2T4AobYvKFOvgKZaE0=\");\n_c = PresentList;\nexport default PresentList;\nvar _c;\n$RefreshReg$(_c, \"PresentList\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","io","jsxDEV","_jsxDEV","socket","transports","withCredentials","reconnection","reconnectionDelay","reconnectionAttempts","PresentList","_s","persons","setPersons","isConnected","setIsConnected","connected","loading","setLoading","formattedDate","today","Date","month","String","getMonth","padStart","date","getDate","year","getFullYear","fetchPersons","response","fetch","data","json","error","console","on","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","person","name","presence_date","id","_c","$RefreshReg$"],"sources":["C:/Users/Usager/Documents/FaceRecognitionProject/fr_front/src/ListPresent/PresentList.jsx"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./PresentList.css\";\r\n\r\nconst socket = io(\"http://localhost:5000\", {\r\n  transports: [\"websocket\", \"polling\"],\r\n  withCredentials: true,\r\n  reconnection: true,\r\n  reconnectionDelay: 1000,\r\n  reconnectionAttempts: 5,\r\n});\r\n\r\nconst PresentList = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [isConnected, setIsConnected] = useState(socket.connected);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const formattedDate = useMemo(() => {\r\n    const today = new Date();\r\n    const month = String(today.getMonth() + 1).padStart(2, \"0\");\r\n    const date = String(today.getDate()).padStart(2, \"0\");\r\n    const year = today.getFullYear();\r\n    return `${month}/${date}/${year}`;\r\n  }, []);\r\n  setPersons();\r\n\r\n  const fetchPersons = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/get-all-persons\");\r\n      const data = await response.json();\r\n      setPersons(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching persons:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"connect\", () => {\r\n      setIsConnected(true);\r\n      fetchPersons();\r\n    });\r\n\r\n    socket.on(\"disconnect\", () => {\r\n      setIsConnected(false);\r\n    });\r\n\r\n    socket.on(\"persons_data\", (data) => {\r\n      setPersons(data);\r\n    });\r\n\r\n    fetchPersons();\r\n\r\n    return () => {\r\n      socket.off(\"connect\");\r\n      socket.off(\"disconnect\");\r\n      socket.off(\"persons_data\");\r\n    };\r\n  }, []);\r\n\r\n  if (loading) return <div className=\"List\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"List\">\r\n      <h2>Present List {formattedDate}</h2>\r\n\r\n      {!isConnected ? (\r\n        <div className=\"connection-warning\">\r\n          Connecting to server... Please wait\r\n        </div>\r\n      ) : persons.length === 0 ? (\r\n        <div className=\"empty-message\">No persons data available</div>\r\n      ) : (\r\n        <div className=\"table\">\r\n          <div className=\"table-header\">\r\n            <div className=\"table-row\">\r\n              <div className=\"table-cell\">Name</div>\r\n              <div className=\"table-cell\">Presence Status</div>\r\n              <div className=\"table-cell\">Date</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"table-body\">\r\n            {persons.map((person) => (\r\n              <div className=\"table-row\" key={person.id}>\r\n                <div className=\"table-cell\">{person.name}</div>\r\n                <div className=\"table-cell\">\r\n                  {person.presence_date ? \"Present\" : \"Absent\"}\r\n                </div>\r\n                <div className=\"table-cell\">{person.presence_date || \"-\"}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PresentList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}