{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usager\\\\Documents\\\\FaceRecognitionProject\\\\fr_front\\\\src\\\\FaceReco\\\\VideoCapture.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCapture = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    // Access the user's camera\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n    }).catch(err => console.error(\"Error accessing camera: \", err));\n\n    // Clean up the stream when the component unmounts\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n  useEffect(() => {\n    // Automatically capture frames every 2 seconds\n    const interval = setInterval(() => {\n      captureFrameAndSend();\n    }, 2000);\n    return () => clearInterval(interval); // Clean up the interval on unmount\n  }, []);\n  const captureFrameAndSend = async () => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    if (!canvas || !video) return;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Convert the frame to a Base64 string\n    const frameData = canvas.toDataURL(\"image/png\");\n\n    // Send the captured frame to the backend\n    try {\n      const response = await fetch(\"http://localhost:5000/process-frame\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          frame: frameData\n        })\n      });\n      const data = await response.json();\n      console.log(\"Backend response:\", data);\n    } catch (error) {\n      console.error(\"Error sending frame:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        width: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCapture, \"ak7+uYfCLCD14UmZDNefIcFbPqc=\");\n_c = VideoCapture;\nexport default VideoCapture;\nvar _c;\n$RefreshReg$(_c, \"VideoCapture\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","VideoCapture","_s","videoRef","canvasRef","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","play","catch","err","console","error","tracks","getTracks","forEach","track","stop","interval","setInterval","captureFrameAndSend","clearInterval","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","frameData","toDataURL","response","fetch","method","headers","body","JSON","stringify","frame","data","json","log","children","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","display","_c","$RefreshReg$"],"sources":["C:/Users/Usager/Documents/FaceRecognitionProject/fr_front/src/FaceReco/VideoCapture.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst VideoCapture = () => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Access the user's camera\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true })\r\n      .then((stream) => {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n      })\r\n      .catch((err) => console.error(\"Error accessing camera: \", err));\r\n\r\n    // Clean up the stream when the component unmounts\r\n    return () => {\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        const tracks = videoRef.current.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Automatically capture frames every 2 seconds\r\n    const interval = setInterval(() => {\r\n      captureFrameAndSend();\r\n    }, 2000);\r\n\r\n    return () => clearInterval(interval); // Clean up the interval on unmount\r\n  }, []);\r\n\r\n  const captureFrameAndSend = async () => {\r\n    const canvas = canvasRef.current;\r\n    const video = videoRef.current;\r\n\r\n    if (!canvas || !video) return;\r\n\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n\r\n    const context = canvas.getContext(\"2d\");\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n    // Convert the frame to a Base64 string\r\n    const frameData = canvas.toDataURL(\"image/png\");\r\n\r\n    // Send the captured frame to the backend\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/process-frame\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ frame: frameData }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"Backend response:\", data);\r\n    } catch (error) {\r\n      console.error(\"Error sending frame:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <video ref={videoRef} style={{ width: \"400px\" }} />\r\n      <canvas ref={canvasRef} style={{ display: \"none\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCapture;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}