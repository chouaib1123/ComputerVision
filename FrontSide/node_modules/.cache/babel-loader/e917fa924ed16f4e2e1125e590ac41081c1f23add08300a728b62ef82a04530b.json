{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usager\\\\Documents\\\\FaceRecognitionProject\\\\ComputerVision\\\\FrontSide\\\\src\\\\Components\\\\GuestPage\\\\ListPresent\\\\PresentList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./PresentList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\", {\n  transports: [\"websocket\", \"polling\"],\n  withCredentials: true,\n  reconnection: true,\n  reconnectionDelay: 1000,\n  reconnectionAttempts: 1000\n});\nconst PresentList = ({\n  isConnected,\n  setIsConnected\n}) => {\n  _s();\n  const [persons, setPersons] = useState([]);\n  const formattedDate = useMemo(() => {\n    const today = new Date();\n    const month = String(today.getMonth() + 1).padStart(2, \"0\");\n    const date = String(today.getDate()).padStart(2, \"0\");\n    const year = today.getFullYear();\n    return `${month}/${date}/${year}`;\n  }, []);\n\n  // New helper function for time formatting\n  const formatPresenceTime = isoString => {\n    if (!isoString) return \"Not present\";\n    const date = new Date(isoString);\n    const hours = String(date.getHours()).padStart(2, \"0\");\n    const minutes = String(date.getMinutes()).padStart(2, \"0\");\n    const seconds = String(date.getSeconds()).padStart(2, \"0\");\n    return `${hours}:${minutes}:${seconds}`;\n  };\n  const fetchPersons = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/get-all-persons\");\n      const data = await response.json();\n      setPersons(data);\n    } catch (error) {\n      console.error(\"Error fetching persons:\", error);\n    }\n  };\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      setIsConnected(true);\n      fetchPersons();\n    });\n    socket.on(\"disconnect\", () => {\n      setIsConnected(false);\n      setPersons([]);\n    });\n    socket.on(\"persons_data\", data => {\n      setPersons(data);\n    });\n    return () => {\n      socket.off(\"connect\");\n      socket.off(\"disconnect\");\n      socket.off(\"persons_data\");\n    };\n  }, [setIsConnected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"List\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Present List \", formattedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-warning\",\n      children: \"Connecting to server... Please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : persons.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-message\",\n      children: \"No persons data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-cell\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-cell\",\n            children: \"Presence Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-cell\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-body\",\n        children: persons.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-cell\",\n            children: person.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-cell\",\n            children: person.presence_datetime ? \"Present\" : \"Absent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-cell\",\n            children: person.presence_datetime ? formatPresenceTime(person.presence_datetime) : \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, person.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(PresentList, \"MM+SkehyCB+V7GRhL2JsrTYV7ZE=\");\n_c = PresentList;\nexport default PresentList;\nvar _c;\n$RefreshReg$(_c, \"PresentList\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","io","jsxDEV","_jsxDEV","socket","transports","withCredentials","reconnection","reconnectionDelay","reconnectionAttempts","PresentList","isConnected","setIsConnected","_s","persons","setPersons","formattedDate","today","Date","month","String","getMonth","padStart","date","getDate","year","getFullYear","formatPresenceTime","isoString","hours","getHours","minutes","getMinutes","seconds","getSeconds","fetchPersons","response","fetch","data","json","error","console","on","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","person","name","presence_datetime","id","_c","$RefreshReg$"],"sources":["C:/Users/Usager/Documents/FaceRecognitionProject/ComputerVision/FrontSide/src/Components/GuestPage/ListPresent/PresentList.jsx"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./PresentList.css\";\r\n\r\nconst socket = io(\"http://localhost:5000\", {\r\n  transports: [\"websocket\", \"polling\"],\r\n  withCredentials: true,\r\n  reconnection: true,\r\n  reconnectionDelay: 1000,\r\n  reconnectionAttempts: 1000,\r\n});\r\n\r\nconst PresentList = ({ isConnected, setIsConnected }) => {\r\n  const [persons, setPersons] = useState([]);\r\n\r\n  const formattedDate = useMemo(() => {\r\n    const today = new Date();\r\n    const month = String(today.getMonth() + 1).padStart(2, \"0\");\r\n    const date = String(today.getDate()).padStart(2, \"0\");\r\n    const year = today.getFullYear();\r\n    return `${month}/${date}/${year}`;\r\n  }, []);\r\n\r\n  // New helper function for time formatting\r\n  const formatPresenceTime = (isoString) => {\r\n    if (!isoString) return \"Not present\";\r\n    const date = new Date(isoString);\r\n    const hours = String(date.getHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n    const seconds = String(date.getSeconds()).padStart(2, \"0\");\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  const fetchPersons = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/get-all-persons\");\r\n      const data = await response.json();\r\n      setPersons(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching persons:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"connect\", () => {\r\n      setIsConnected(true);\r\n      fetchPersons();\r\n    });\r\n\r\n    socket.on(\"disconnect\", () => {\r\n      setIsConnected(false);\r\n      setPersons([]);\r\n    });\r\n\r\n    socket.on(\"persons_data\", (data) => {\r\n      setPersons(data);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"connect\");\r\n      socket.off(\"disconnect\");\r\n      socket.off(\"persons_data\");\r\n    };\r\n  }, [setIsConnected]);\r\n\r\n  return (\r\n    <div className=\"List\">\r\n      <h2>Present List {formattedDate}</h2>\r\n\r\n      {!isConnected ? (\r\n        <div className=\"connection-warning\">\r\n          Connecting to server... Please wait\r\n        </div>\r\n      ) : persons.length === 0 ? (\r\n        <div className=\"empty-message\">No persons data available</div>\r\n      ) : (\r\n        <div className=\"table\">\r\n          <div className=\"table-header\">\r\n            <div className=\"table-row\">\r\n              <div className=\"table-cell\">Name</div>\r\n              <div className=\"table-cell\">Presence Status</div>\r\n              <div className=\"table-cell\">Time</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"table-body\">\r\n            {persons.map((person) => (\r\n              <div className=\"table-row\" key={person.id}>\r\n                <div className=\"table-cell\">{person.name}</div>\r\n                <div className=\"table-cell\">\r\n                  {person.presence_datetime ? \"Present\" : \"Absent\"}\r\n                </div>\r\n                <div className=\"table-cell\">\r\n                  {person.presence_datetime\r\n                    ? formatPresenceTime(person.presence_datetime)\r\n                    : \"-\"}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PresentList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}