{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usager\\\\Documents\\\\FaceRecognitionProject\\\\fr_front\\\\src\\\\Components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"image\", image);\n    try {\n      const response = await fetch(\"http://your-backend-api-url/IMAGES\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        console.log(\"Image uploaded successfully\");\n      } else {\n        console.error(\"Image upload failed\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"card-container\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter name\",\n      className: \"input-name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      className: \"input-image\",\n      onChange: e => setImage(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submit-button\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"veZAMt9oacl3lWOLI0x8xrTqLxQ=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Card","_s","name","setName","image","setImage","handleSubmit","e","preventDefault","formData","FormData","append","response","fetch","method","body","ok","console","log","error","className","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","files","_c","$RefreshReg$"],"sources":["C:/Users/Usager/Documents/FaceRecognitionProject/fr_front/src/Components/Card/Card.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"image\", image);\r\n\r\n    try {\r\n      const response = await fetch(\"http://your-backend-api-url/IMAGES\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      if (response.ok) {\r\n        console.log(\"Image uploaded successfully\");\r\n      } else {\r\n        console.error(\"Image upload failed\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"card-container\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter name\"\r\n        className=\"input-name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        className=\"input-image\"\r\n        onChange={(e) => setImage(e.target.files[0])}\r\n      />\r\n      <button type=\"submit\" className=\"submit-button\">\r\n        Upload\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC;IAC7BO,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,KAAK,CAAC;IAE/B,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MACF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC5C,CAAC,MAAM;QACLD,OAAO,CAACE,KAAK,CAAC,qBAAqB,CAAC;MACtC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEpB,OAAA;IAAMqB,SAAS,EAAC,gBAAgB;IAACC,QAAQ,EAAEf,YAAa;IAAAgB,QAAA,gBACtDvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBJ,SAAS,EAAC,YAAY;MACtBK,KAAK,EAAEvB,IAAK;MACZwB,QAAQ,EAAGnB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACoB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFhC,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXH,SAAS,EAAC,aAAa;MACvBM,QAAQ,EAAGnB,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACoB,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFhC,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAACH,SAAS,EAAC,eAAe;MAAAE,QAAA,EAAC;IAEhD;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAC9B,EAAA,CA5CID,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AA8CV,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}